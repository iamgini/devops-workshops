# Namespace for the application
---
apiVersion: v1
kind: Namespace
metadata:
  name: wordpress

---
# PersistentVolumeClaim for WordPress
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wordpress-pvc
  namespace: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 5Gi  # Adjust as needed

# PersistentVolumeClaim for MySQL
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: wordpress
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: standard
  resources:
    requests:
      storage: 5Gi  # Adjust as needed

---
# Frontend (WordPress) deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress-deployment
  namespace: wordpress
spec:
  replicas: 1  # Adjust as needed
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      containers:
      - name: wordpress
        image: wordpress:latest  # Replace with your preferred image
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "200Mi"
            cpu: "100m"
          limits:
            memory: "300Mi"
            cpu: "200m"
        env:
        - name: WORDPRESS_DB_HOST
          value: wordpress-mysql # Consistent with MySQL service name
        - name: WORDPRESS_DB_USER
          value: wordpressuser  # Consistent database user
        - name: WORDPRESS_DB_PASSWORD
          value: wordpresspassword  # Consistent database password
        - name: WORDPRESS_DB_NAME
          value: wordpressdb

        volumeMounts:
        - name: wordpress-persistent-storage
          mountPath: /var/www/html
        # - name: wp-setup-script
        #   mountPath: /setup.sh
        #   readOnly: true  
      volumes:
      - name: wordpress-persistent-storage
        persistentVolumeClaim:
          claimName: wordpress-pvc
      # - name: wp-setup-script
      #   configMap:
      #     name: wp-setup-script  # Create a ConfigMap with the script
      
   

---
# Backend (MySQL) deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: wordpress
spec:
  replicas: 1  # Adjust as needed
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:5.7  # Replace with your preferred MySQL image
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: password  # Replace with a secure root password
        - name: MYSQL_DATABASE
          value: wordpressdb
        - name: MYSQL_USER
          value: wordpressuser  # Consistent database user
        - name: MYSQL_PASSWORD
          value: wordpresspassword  # Consistent database password
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-pvc

# ---
# # Frontend (WordPress) service
# apiVersion: v1
# kind: Service
# metadata:
#   name: wordpress-service
#   namespace: wordpress
# spec:
#   selector:
#     app: wordpress
#   ports:
#   - port: 80
#     targetPort: 80

---
# Backend (MySQL) service
apiVersion: v1
kind: Service
metadata:
  name: wordpress-mysql
  namespace: wordpress
spec:
  selector:
    app: mysql
  ports:
  - port: 3306

---
apiVersion: v1
kind: Service
metadata:
  name: wordpress-app
  namespace: wordpress
spec:
  type: NodePort
  selector:
    app: wordpress
  ports:
    - port: 8084        # Port exposed within the cluster
      targetPort: 80    # Port on the pods
      # nodePort: 30080   # Optional: Specify a specific NodePort (will be auto-assigned if omitted)

# You can configure the HPA using YAML as follows if required
# ---
# apiVersion: autoscaling/v2beta2
# kind: HorizontalPodAutoscaler
# metadata:
#   name: your-hpa
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: your-deployment
#   minReplicas: 1
#   maxReplicas: 10
#   metrics:
#   - type: Resource
#     resource:
#       name: memory
#       target:
#         type: Utilization
#         averageValue: 500Mi  # Adjust the target average memory utilization as needed
